package com.ediweb.education.client.ui;

import com.ediweb.education.client.SocketCreator;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ConnectException;
import java.net.Socket;

public class AuthorizationForm {

    private JFrame frame;

    private JPanel pnlMain;
    private JTextField loginField;
    private JTextField passwordField;
    private JButton logInButton;

    private AuthorizationFormAction formAction;

    public AuthorizationForm(final JFrame frame) {
        formAction = new AuthorizationFormAction();
        this.frame = frame;
        logInButton.addActionListener(loginAction());
    }


    private ActionListener loginAction() {
        return new ActionListener() {
            public void actionPerformed(ActionEvent actionEvent) {

                try (Socket socket = SocketCreator.create();
                     DataOutputStream out = new DataOutputStream(socket.getOutputStream());
                     DataInputStream in = new DataInputStream(socket.getInputStream());) {

                    validate();
                    formAction.authorization(frame, out, in, loginField.getText(), passwordField.getText());

                } catch (ConnectException e) {
                    JDialog dialog = new InformationDialogFrame().createDialog(frame, "Ошибка подключения", e.getMessage());
                    dialog.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        };
    }


    private void validate() throws ConnectException {
        if (loginField.getText() == null || loginField.getText().isEmpty()) {
            throw new ConnectException("Логин не может быть пустым");
        } else if (passwordField.getText() == null || passwordField.getText().isEmpty()) {
            throw new ConnectException("Пароль не может быть пустым");
        } else if (loginField.getText().equals(passwordField.getText())) {
            throw new ConnectException("Логин не может совпадать с паролем");
        }
    }


    public JPanel getPanel() {
        return pnlMain;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        pnlMain = new JPanel();
        pnlMain.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("Login");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        pnlMain.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Password");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        pnlMain.add(label2, gbc);
        loginField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlMain.add(loginField, gbc);
        passwordField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlMain.add(passwordField, gbc);
        logInButton = new JButton();
        logInButton.setText("Entry");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlMain.add(logInButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return pnlMain;
    }
}
